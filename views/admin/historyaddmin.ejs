<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- BS5 -->
    <link rel="stylesheet" href="/css/bootstrap.min.css">
    <script src="/js/bootstrap.bundle.min.js"></script>

    <link rel="stylesheet" href="/css/home.css">
    <link rel="stylesheet" href="./css/historyadmin.css">

    <link rel="stylesheet"
        href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
    <title>HistoryStaff</title>
</head>
<style>

</style>

<body>

    <div class="container-fluid" id="container">
        <aside>
            <div class="top">
                <div class="logo">
                    <img src="/assets/Borrowing 101 Education.png" alt="">
                </div>
            </div>
            <div class="sidebar">
                <a class="active" id="btnhome">
                    <span class="material-symbols-outlined">home</span>
                    <h3>HOME</h3>
                </a>
                <a class="link-light" id="btnsearch">
                    <span class="material-symbols-outlined">Search</span>
                    <h3>ITEM</h3>
                </a>
                <a class="link-light" id="btnhistory">
                    <span class="material-symbols-outlined">history</span>
                    <h3>HISTORY</h3>
                </a>
                <a class="link-light" id="btnBorrowing">
                    <span class="material-symbols-outlined">format_list_bulleted</span>
                    <h3>BORROW</h3>
                </a>

                <a class="link-light" id="btnlogout">
                    <span class="material-symbols-outlined">logout</span>
                    <h3>LOG OUT</h3>
                </a>
            </div>
        </aside>
        <main>
            <div class="container">

                <h1 class="mt-5"><b>HISTORY</b></h1>
                <div class="tablestatus">
                    <div class="row">
                        <table class="table table-striped table-hover table-bordered" style="width: 100%;">
                            <thead>
                                <tr>
                                    <th>BorrowID</th>
                                    <th>ItemName</th>
                                    <th>UserName</th>
                                    <th>Borrowed date </th>
                                    <th>returned date</th>
                                    <th>Status</th>
                                </tr>

                            </thead>
                            <tbody id="borrowhistory"></tbody>
                        </table>
                        <div class="pagination d-flex justify-content-center" id="pagination-container"></div>
                    </div>
                </div>
            </div>
        </main>

        <script>
            const tblProduct = document.querySelector('#borrowhistory');
            console.log(tblProduct);
            getUser();
            logout();
            itemsearch();
            home();
            borrowhistory();
            borrowing();

            let data = []; // Your array of data
            let currentPage = 1;
            const itemsPerPage = 20; // Set the number of items per page

            const paginationContainer = document.getElementById('pagination-container');
            async function borrowhistory() {
                try {
                    const response = await fetch('/getApprovedsuccess');
                    if (response.ok) {
                        const json = await response.json();
                        data = json.requirement;
                        renderTable();
                    } else {
                        throw Error('Connection error');
                    }
                } catch (err) {
                    console.error(err);
                    // alert(err.message);
                }
            }

            function createTable(startIndex, endIndex) {
                let rows = '';
                for (let i = startIndex; i < endIndex; i++) {
                    if (!data[i]) break; // Stop if there are no more items
                    const p = data[i];
                   if(p.ret_status == 'success'){
                    const borStatus = 'Returned';
                    rows += `<tr><td>${p.bor_id}</td>`;
                    rows += `<td>${p.pro_name}</td>`;
                    rows += `<td>${p.user_name}</td>`;
                    rows += `<td>${new Date(p.bor_date).toLocaleDateString()}</td>`;
                    rows += `<td>${new Date(p.bor_ret_date).toLocaleDateString()}</td>`;
                    rows += `<td>${borStatus}</td></tr>`;
                   }
                }
                tblProduct.innerHTML = rows;
            }

            function handlePagination() {
                const totalPages = Math.ceil(data.length / itemsPerPage);
                paginationContainer.innerHTML = '';

                for (let i = 1; i <= totalPages; i++) {
                    const button = document.createElement('button');
                    button.textContent = i;
                    button.setAttribute('class', 'btn btn-success m-2');
                    button.addEventListener('click', function () {
                        currentPage = parseInt(this.textContent);
                        renderTable();
                    });
                    paginationContainer.appendChild(button);
                }
            }

            function renderTable() {
                const startIndex = (currentPage - 1) * itemsPerPage;
                const endIndex = startIndex + itemsPerPage;
                createTable(startIndex, endIndex);
                handlePagination();
            }

            //get user info
            async function getUser() {
                try {
                    const response = await fetch('/user');
                    if (response.ok) {
                        const data = await response.json();
                        // document.querySelector('#user').innerText = 'Welcome ' + data.username;
                        console.log(data);
                    }
                    else {
                        throw Error('Connection error');
                    }
                } catch (err) {
                    console.error(err);
                    // alert(err.message);
                }
            };
            function logout() {
                bntsignout = document.querySelector('#btnlogout');
                bntsignout.onclick = function () {
                    fetch('/logout', {
                        method: 'GET',
                        credentials: 'include' // Include credentials (cookies) in the request
                    })
                        .then(response => {
                            if (response.ok) {
                                // Redirect to the home page or login page after successful logout
                                window.location.href = "/login";
                            } else {
                                console.error("Logout failed");
                            }
                        })
                        .catch(error => {
                            console.error("Error during logout:", error);
                        });
                }
            }

            function itemsearch() {
                bntsignout = document.querySelector('#btnsearch');
                bntsignout.onclick = function () {
                    window.location = '/itemAddmin'
                }
            }

            function home() {
                bntsignout = document.querySelector('#btnhome');
                bntsignout.onclick = function () {
                    window.location = '/dashboard'
                }
            }
            function borrowing() {
                bntsignout = document.querySelector('#btnBorrowing');
                bntsignout.onclick = function () {
                    window.location = '/Borrowingaddmin'
                }
            }

        </script>


</body>

</html>