<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- BS5 -->
    <link rel="stylesheet" href="/css/bootstrap.min.css">
    <script src="/js/bootstrap.bundle.min.js"></script>

    <link rel="stylesheet" href="/css/home.css">

    <link rel="stylesheet"
        href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@10"></script>
    <title>ListStaff</title>
</head>
<style>

</style>

<body>

    <div class="container-fluid" id="container">
        <aside>
            <div class="top">
                <div class="logo">
                    <img src="/assets/Borrowing 101 Education.png" alt="">
                </div>
            </div>
            <div class="sidebar">
                <a class="active" id="btnhome">
                    <span class="material-symbols-outlined">home</span>
                    <h3>HOME</h3>
                </a>
                <a class="link-light" id="btnsearch">
                    <span class="material-symbols-outlined">Search</span>
                    <h3>ITEM</h3>
                </a>
                <a class="link-light" id="btnhistory">
                    <span class="material-symbols-outlined">history</span>
                    <h3>HISTORY</h3>
                </a>
                <a class="link-light" id="btnBorrowing">
                    <span class="material-symbols-outlined">format_list_bulleted</span>
                    <h3>BORROW</h3>
                </a>

                <a class="link-light" id="btnlogout">
                    <span class="material-symbols-outlined">logout</span>
                    <h3>LOG OUT</h3>
                </a>
            </div>
        </aside>
        <div class="container">

            <h1 class="mt-5"><b>BORROW</b></h1>
            <div class="row justify-content-center">
                <div class="col-12">
                    <div class="py-3 container ">
                    </div>
                    <div class="" style="background-color: #f5f7fa;">
                        <div class="card-body">

                            <div class="table-responsive">

                            </div>
                        </div>
                        <table class="table table-borderless mb-0">

                            <thead>
                                <td>
                                <tr>
                                    <th>BorrowID</th>
                                    <th>ItemName</th>
                                    <th>UserName</th>
                                    <th>Borrowed date </th>
                                    <th>returned date</th>
                                </tr>
                                </td>
                            </thead>
                            <tbody id="borrow">

                            </tbody>
                        </table>
                        <div class="pagination" id="pagination-container"></div>
                    </div>
                </div>
            </div>
        </div>


        <script>
            const tblProduct = document.querySelector('#borrow');

            getUser();
            logout();
            itemsearch();
            history();
            home();
            returnitem();



            // ----------------------------return item
            let data = []; // Your array of data
            let currentPage = 1;
            const itemsPerPage = 20; // Set the number of items per page

            const paginationContainer = document.getElementById('pagination-container');
            async function returnitem() {
                try {
                    const response = await fetch('/getuserApproved');
                    if (response.ok) {
                        const json = await response.json();
                        data = json.requirement;
                        renderTable();
                    } else {
                        throw Error('Connection error');
                    }
                } catch (err) {
                    console.error(err);
                    // alert(err.message);
                }
            }

            function createTable(startIndex, endIndex) {
                let rows = '';
                for (let i = startIndex; i < endIndex; i++) {
                    if (!data[i]) break; // Stop if there are no more items
                    const p = data[i];
                    rows += `<tr><td>${p.bor_id}</td>`;
                    rows += `<td>${p.pro_name}</td>`;
                    rows += `<td>${p.user_username}</td>`;
                    rows += `<td>${new Date(p.bor_date).toLocaleDateString()}</td>`;
                    rows += `<td>${new Date(p.bor_ret_date).toLocaleDateString()}</td>`;
                    rows += `<td>Borrowing</td>`;
                    rows += `<td><button class="btn btn-retrun btn-primary btn-sm" id = "${p.bor_id}">RETURNED</button></td><tr>`;
                }
                tblProduct.innerHTML = rows;
                btnreturn();
            }

            function handlePagination() {
                const totalPages = Math.ceil(data.length / itemsPerPage);
                paginationContainer.innerHTML = '';

                for (let i = 1; i <= totalPages; i++) {
                    const button = document.createElement('button');
                    button.textContent = i;
                    button.setAttribute('class', 'btn btn-success m-2');
                    button.addEventListener('click', function () {
                        currentPage = parseInt(this.textContent);
                        renderTable();
                    });
                    paginationContainer.appendChild(button);
                }
            }

            function renderTable() {
                const startIndex = (currentPage - 1) * itemsPerPage;
                const endIndex = startIndex + itemsPerPage;
                createTable(startIndex, endIndex);
                handlePagination();
            }
            // ----------------------------return item

            // ----------------------------return item button
            function btnreturn() {
                btnreturn = document.querySelectorAll('.btn-retrun');
                btnreturn.forEach(function (btn) {
                    btn.onclick = function () {
                        Swal.fire({
                            title: "Are you sure?",
                            text: "You won't be able to revert this!",
                            icon: "warning",
                            showCancelButton: true,
                            confirmButtonColor: "#3085d6",
                            cancelButtonColor: "#d33",
                            confirmButtonText: "Yes, returned!"
                        }).then((result) => {
                            if (result.isConfirmed) {
                                Swal.fire({
                                    title: "Returned!",
                                    text: "The item has been returned.",
                                    icon: "success"
                                }).then((result) => {
                                    if (result.isConfirmed) {
                                        window.location.reload();
                                    }
                                })
                                // console.log(btn.id);
                                const apiEndpoint = '/returnitme/'
                                const itemId = btn.id;
                                const updatedBorrowData = {
                                    bor_status: 'success'
                                };

                                fetch(apiEndpoint + itemId, {
                                    method: 'PUT',
                                    headers: {
                                        'Content-Type': 'application/json',
                                    },
                                    body: JSON.stringify(updatedBorrowData),
                                })
                                    .then(response => response.json())
                                    .then(data => {
                                        // alert(data.status)

                                        // Handle the response from the server
                                        console.log(data);
                                        // You can update your HTML or perform other actions based on the response
                                    })
                                    .catch(error => {
                                        console.error('Error:', error);
                                    });
                            }
                        });
                        // alert(btn.id);
                        // window.location = '/historyaddmin'
                    }
                });
            }
            // ----------------------------return item button


            // ----------------------------get user info
            async function getUser() {
                try {
                    const response = await fetch('/user');
                    if (response.ok) {
                        const data = await response.json();
                        // document.querySelector('#user').innerText = 'Welcome ' + data.username;
                        console.log(data);
                    }
                    else {
                        throw Error('Connection error');
                    }
                } catch (err) {
                    console.error(err);
                    // alert(err.message);
                }
            };
            function logout() {
                bntsignout = document.querySelector('#btnlogout');
                bntsignout.onclick = function () {
                    fetch('/logout', {
                        method: 'GET',
                        credentials: 'include' // Include credentials (cookies) in the request
                    })
                        .then(response => {
                            if (response.ok) {
                                // Redirect to the home page or login page after successful logout
                                window.location.href = "/login";
                            } else {
                                console.error("Logout failed");
                            }
                        })
                        .catch(error => {
                            console.error("Error during logout:", error);
                        });
                }
            }
            function home() {
                bntsignout = document.querySelector('#btnhome');
                bntsignout.onclick = function () {
                    window.location = '/dashboard'
                }
            }
            function itemsearch() {
                bntsignout = document.querySelector('#btnsearch');
                bntsignout.onclick = function () {
                    window.location = '/itemAddmin'
                }
            }
            function history() {
                bntsignout = document.querySelector('#btnhistory');
                bntsignout.onclick = function () {
                    window.location = '/historyaddmin'
                }
            }

        </script>
</body>

</html>